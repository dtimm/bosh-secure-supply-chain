name: go.mod SBoMs
description: |
  Generates SBoMs for go.mod files in a BOSH release.
  The SBoMs are uploaded as artifacts.

inputs:
  go-mod:
    description: "The path to the go.mod file to generate a SBoM for"
    required: true
  sbom-format:
    description: "The format of the SBoM to generate"
    required: true
    default: "cyclonedx-json"

outputs:
  sbom:
    description: "go.mod SBoM for a given package in the provided BOSH release"
    value: ${{ steps.compile-sbom.outputs.sbom }}

runs:
  using: "composite"
  steps:
  - name: Compile Bill of Materials
    id: compile-sbom
    shell: bash
    env:
      SBOM_FORMAT: ${{ inputs.sbom-format }}
      GO_MOD_FILE: ${{ inputs.go-mod }}
    run: |
      set -e
      echo "${GO_MOD_FILE:?GO_MOD_FILE must be set}"
      sbom_format="${SBOM_FORMAT:-cyclonedx-json}"

      echo "Generating SBoM for ${GO_MOD_FILE}"

      package_sbom="$(syft packages "file:${GO_MOD_FILE}" --output "${sbom_format}")"
      echo "Metadata for SBoM:"
      echo "${package_sbom}" | jq .metadata

      jsonString=$(echo "${package_sbom}" | jq --join-output --compact-output .)

      uuid=$(uuidgen)
      echo "${jsonString}" > "${uuid}.sbom.json"

      echo "sbom=${jsonString}" >> "$GITHUB_OUTPUT"
